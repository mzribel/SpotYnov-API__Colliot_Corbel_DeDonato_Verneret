{
    "openapi": "3.0.0",
    "servers": [
        {
            "description": "SpotYnov API",
            "url": "http://localhost:3000/"
        }
    ],
    "info": {
        "description": "Théo Colliot-Martinez, Marianne Corbel, Tony de Donato & Nils Verneret, B3 INFO DEV ♪",
        "version": "1.0.1",
        "title": "TP3 - SpotYnov API"
    },
    "tags": [
        {
            "name": "Authentication",
            "description": "Endpoints related to Spotify user authentication"
        },
        {
            "name": "Users",
            "description": "Endpoints related to users"
        },
        {
            "name": "Groups",
            "description": "Endpoints related to user groups"
        },
        {
            "name": "Playlists",
            "description": "Endpoints related to user playlists"
        }
    ],
    "paths": {
        "/register": {
            "post": {
                "summary": "User registration",
                "requestBody": {
                    "description": "User data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "username": {
                                        "type": "string",
                                        "description": "Username of the new user"
                                    },
                                    "password": {
                                        "type": "string",
                                        "description": "Password of the new user"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad request (wrong user credential format)"
                    },
                    "409": {
                        "description": "Conflict (user already exists)"
                    },
                    "429": {
                        "description": "Too many requests"
                    }
                },
                "tags": [
                    "Authentication"
                ]
            }
        },
        "/login": {
            "get": {
                "summary": "User login",
                "parameters": [
                    {
                        "in": "query",
                        "name": "userId",
                        "description": "ID of the user to be logged in",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "password",
                        "description": "Password of the user to be logged in",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized (wrong user credentials)"
                    },
                    "429": {
                        "description": "Too many requests"
                    }
                },
                "tags": [
                    "Authentication"
                ]
            }
        },
        "/logout": {
            "get": {
                "summary": "Deletes Spotify user tokens from database",
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "429": {
                        "description": "Too many requests"
                    }
                },
                "tags": [
                    "Authentication"
                ]
            }
        },
        "/spotify/auth": {
            "get": {
                "summary": "Retrieves Spotify connection URL using Authorization Code Grant method",
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "429": {
                        "description": "Too many requests"
                    }
                },
                "tags": [
                    "Authentication"
                ]
            }
        },
        "/spotify/callback": {
            "get": {
                "summary": "Automatic redirection from Spotify after user connection (not to be used manually)",
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "429": {
                        "description": "Too many requests"
                    }
                },
                "tags": [
                    "Authentication"
                ]
            }
        },
        "/users/": {
            "get": {
                "summary": "Retrieves service users",
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "429": {
                        "description": "Too many requests"
                    }
                },
                "tags": [
                    "Users"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "summary": "Creates a new service user",
                "requestBody": {
                    "description": "User data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "username": {
                                        "type": "string",
                                        "description": "Username of the new user"
                                    },
                                    "password": {
                                        "type": "string",
                                        "description": "Password of the new user"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad request (wrong user credential format)"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "429": {
                        "description": "Too many requests"
                    }
                },
                "tags": [
                    "Users"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/users/{userId}": {
            "get": {
                "summary": "Retrieves a service user by their user ID",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userId",
                        "schema": {
                            "type": "string"
                        },
                        "required": true,
                        "description": "Username of the user"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "429": {
                        "description": "Too many requests"
                    }
                },
                "tags": [
                    "Users"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "summary": "Deletes a service user by their user ID",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userId",
                        "schema": {
                            "type": "string"
                        },
                        "required": true,
                        "description": "Username of the user"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "429": {
                        "description": "Too many requests"
                    }
                },
                "tags": [
                    "Users"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/groups": {
            "get": {
                "summary": "Retrieves the data of the groups",
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "429": {
                        "description": "Too many requests"
                    }
                },
                "tags": [
                    "Groups"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "summary": "Creates a new group",
                "requestBody": {
                    "description": "User data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "username": {
                                        "type": "string",
                                        "description": "Name of the new group"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "409": {
                        "description": "Conflict (another group with this name already exists)"
                    },
                    "429": {
                        "description": "Too many requests"
                    }
                },
                "tags": [
                    "Groups"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/groups/{groupId}": {
            "get": {
                "summary": "Retrieves the data and members of a group by its ID",
                "parameters": [
                    {
                        "in": "path",
                        "name": "groupId",
                        "schema": {
                            "type": "string"
                        },
                        "required": true,
                        "description": "ID of the group"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "429": {
                        "description": "Too many requests"
                    }
                },
                "tags": [
                    "Groups"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "summary": "Modifies a group by its ID",
                "parameters": [
                    {
                        "in": "path",
                        "name": "groupId",
                        "schema": {
                            "type": "string"
                        },
                        "required": true,
                        "description": "ID of the group"
                    }
                ],
                "requestBody": {
                    "description": "User data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "username": {
                                        "type": "string",
                                        "description": "Username of the new user"
                                    },
                                    "password": {
                                        "type": "string",
                                        "description": "Password of the new user"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "409": {
                        "description": "Conflict (another group with this name already exists)"
                    },
                    "429": {
                        "description": "Too many requests"
                    }
                },
                "tags": [
                    "Groups"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "summary": "Deletes a group by its ID",
                "parameters": [
                    {
                        "in": "path",
                        "name": "groupId",
                        "schema": {
                            "type": "string"
                        },
                        "required": true,
                        "description": "ID of the group"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "429": {
                        "description": "Too many requests"
                    }
                },
                "tags": [
                    "Groups"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/groups/{groupId}/members": {
            "post": {
                "summary": "Adds a new member to a group",
                "parameters": [
                    {
                        "in": "path",
                        "name": "groupId",
                        "schema": {
                            "type": "string"
                        },
                        "required": true,
                        "description": "ID of the group"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "userId": {
                                        "type": "string",
                                        "description": "Username of the user to add to the group"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request (user doesn't exist)"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "409": {
                        "description": "Conflict (member already part of the group)"
                    },
                    "429": {
                        "description": "Too many requests"
                    }
                },
                "tags": [
                    "Groups"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "summary": "Deletes a member from a group",
                "parameters": [
                    {
                        "in": "path",
                        "name": "groupId",
                        "schema": {
                            "type": "string"
                        },
                        "required": true,
                        "description": "ID of the group"
                    },
                    {
                        "in": "query",
                        "name": "userId",
                        "schema": {
                            "type": "string"
                        },
                        "required": true,
                        "description": "ID of the user to remove from the group"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "429": {
                        "description": "Too many requests"
                    }
                },
                "tags": [
                    "Groups"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/groups/{groupId}/synchronize": {
            "get": {
                "summary": "Synchronize all possible players from a group to a users player",
                "parameters": [
                    {
                        "in": "path",
                        "name": "groupId",
                        "schema": {
                            "type": "string"
                        },
                        "required": true,
                        "description": "ID of the group"
                    },
                    {
                        "in": "query",
                        "name": "userId",
                        "schema": {
                            "type": "string"
                        },
                        "required": true,
                        "description": "ID of the group"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "429": {
                        "description": "Too many requests"
                    }
                },
                "tags": [
                    "Groups"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/users/{userId}/playlists/from-top-tracks": {
            "post": {
                "summary": "Creates a playlist for the current user with the top tracks of a given member",
                "requestBody": {
                    "description": "User data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "Name of the playlist"
                                    },
                                    "description": {
                                        "type": "string",
                                        "description": "Description of the playlist"
                                    },
                                    "public": {
                                        "type": "boolean",
                                        "description": "Whether or not the playlist will be public"
                                    },
                                    "tracks-per-users": {
                                        "description": "Number of top tracks per user to add to playlist ([1-50])",
                                        "type": "integer"
                                    },
                                    "user-ids": {
                                        "type": "array",
                                        "description": "Array of user IDs",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "group-id": {
                                        "type": "string",
                                        "description": "ID of the group to create a playlist from"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "userId",
                        "schema": {
                            "type": "string"
                        },
                        "required": true,
                        "description": "ID of the user"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized (Missing or wrong authentication header or missing Spotify Connection)"
                    },
                    "429": {
                        "description": "Too many requests"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "tags": [
                    "Playlists"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    }
}